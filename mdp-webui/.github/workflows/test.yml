name: Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Run linter
      run: npm run lint || true
      continue-on-error: true
    
    - name: Run tests
      run: npm run test:run
    
    - name: Generate coverage report
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
    
    - name: Archive coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-node-${{ matrix.node-version }}
        path: coverage/
        retention-days: 7
    
    - name: Check coverage thresholds
      run: |
        echo "Checking coverage thresholds..."
        npx vitest run --coverage --reporter=json --outputFile=coverage-summary.json
        node -e "
        const coverage = require('./coverage/coverage-summary.json');
        const total = coverage.total;
        console.log('Coverage Summary:');
        console.log('Lines:', total.lines.pct + '%');
        console.log('Statements:', total.statements.pct + '%');
        console.log('Functions:', total.functions.pct + '%');
        console.log('Branches:', total.branches.pct + '%');
        
        const threshold = 100;
        const failed = [];
        if (total.lines.pct < threshold) failed.push('lines');
        if (total.statements.pct < threshold) failed.push('statements');
        if (total.functions.pct < threshold) failed.push('functions');
        if (total.branches.pct < threshold) failed.push('branches');
        
        if (failed.length > 0) {
          console.error('Coverage below threshold for:', failed.join(', '));
          process.exit(1);
        } else {
          console.log('All coverage thresholds met!');
        }
        "
    
    - name: Build application
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-output-node-${{ matrix.node-version }}
        path: dist/
        retention-days: 7

  test-browsers:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Install Playwright browsers
      run: |
        npm install -D @playwright/test
        npx playwright install chromium firefox
    
    - name: Run browser tests
      run: |
        echo "Browser tests would run here"
        # npx playwright test
      continue-on-error: true

  release:
    needs: [test, test-browsers]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Build for production
      run: npm run build
    
    - name: Create release artifact
      run: |
        zip -r mdp-webui-${{ github.sha }}.zip dist/
    
    - name: Upload release artifact
      uses: actions/upload-artifact@v4
      with:
        name: mdp-webui-release
        path: mdp-webui-${{ github.sha }}.zip
        retention-days: 30